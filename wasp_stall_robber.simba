{$DEFINE SCRIPT_ID := '2c9e42f7-cb23-4976-827f-9ffe112a0c3f'}
{$DEFINE SCRIPT_REVISION := '22'}
{$DEFINE SCRIPT_GUI}
{$I SRL-T/osr.simba}
{$I WaspLib/osr.simba}

type
  ERSStall = (TEA_STALL, SILK_STALL, FRUIT_STALL);
var
  CurrentStall: ERSStall = ERSStall.FRUIT_STALL;

type
  EStallRobberState = (
    FIND_STALL,
    LEVELED_UP,
    ROB_STALL,
    DROP_LOOT,
    WALK_SPOT,
    WAIT_STATE,
    END_SCRIPT
  );

  TStallRobber = record(TBaseWalkerScript)
    State: EStallRobberState;

    Stall: TRSObject;
    SafeSpot: TPoint;
    DropList: TRSItemArray;
    StallCooldown: TCountDown;
  end;

procedure TAntiban.Setup(); override;
begin
  Self.Skills := [ERSSkill.THIEVING, ERSSkill.TOTAL];
  Self.MinZoom := 5;
  Self.MaxZoom := 85;

  inherited;
end;

procedure TStallRobber.SetupStall();
begin
  case CurrentStall of
    ERSStall.TEA_STALL:
      begin
        Self.RSW.SetupRegions([RSRegions.VARROCK_EAST]);
        Stall := RSObjects.TeaStall;
        StallCooldown.Init(7000);
        SafeSpot := [8465, 2808];
        DropList := ['Cup of tea'];
      end;

    ERSStall.SILK_STALL:
      begin
        Self.RSW.SetupRegions([RSRegions.ARDOUGNE]);
        Stall := RSObjects.SilkStall;
        StallCooldown.Init(5000);
        SafeSpot := [6042, 3182];
        DropList := ['Silk'];
      end;

    ERSStall.FRUIT_STALL:
      begin
        Self.RSW.SetupRegions([RSRegions.HOSIDIUS_FRUIT_STALL_HOUSE]);
        Stall := RSObjects.FruitStall;
        StallCooldown.Init(2000);
        Self.DropList := [
          'Cooking apple', 'Banana', 'Jangerberries', 'Lemon', 'Redberries',
          'Pineapple', 'Lime', 'Strawberry', 'Strange fruit',
          'Papaya fruit', 'Silk'//, 'Golovanova fruit top'
        ];
      end;
  end;

  StallCooldown.Timeout := GetTickCount();
end;

procedure TStallRobber.Init(maxActions: UInt32; maxTime: UInt64); override;
begin
  inherited;

  Self.SetupStall();

  if WLSettings.RemoteInput.HUDDebug then
    DebugObjectArray += Stall;
end;


function TStallRobber.HasLoot(): Boolean;
var
  Slots: TIntegerArray;
begin
  Result := Inventory.FindItems(DropList, Slots);
end;

function TStallRobber.RobStall(): Boolean;
begin
  if Stall.WalkClick() then
    Result := XPBar.WaitXP(2000);

  if Result then
  begin
    StallCooldown.Restart(-200, 200);
    WL.Activity.Restart();
  end;
end;

function TStallRobber.DropItems(): Boolean;
var
  Slots: TIntegerArray;
begin
  Inventory.FindItems(Self.DropList, Slots);
  Result := Inventory.ShiftDrop(Self.DropList, DROP_PATTERN_SNAKE);

  if Result then
    TotalActions += Length(Slots);
end;


function TStallRobber.GetState(): EStallRobberState;
begin
  if WL.Activity.IsFinished() then
    Exit(END_SCRIPT);

  if Chat.LeveledUp() then
    Exit(LEVELED_UP);

  if Inventory.IsFull() and Self.HasLoot() then
    Exit(DROP_LOOT);

  if MainScreen.IsUpText('Steal-from') then
    Exit(ROB_STALL);

  if not StallCooldown.IsFinished() then
    Exit(WAIT_STATE);

  if (SafeSpot <> []) and not Self.RSW.AtTile(SafeSpot, 5) then
    Exit(WALK_SPOT);

  if Self.RSW.AtTile(Stall.Coordinates) then
    Exit(FIND_STALL);
end;

procedure TStallRobber.Run(maxActions: UInt32; maxTime: UInt64);
begin
  Self.Init(maxActions, maxTime);

  repeat
    State := Self.GetState();
    Self.SetAction(ToStr(State));

    case Self.State of
      LEVELED_UP: Chat.HandleLevelUp();
      DROP_LOOT:  Self.DropItems();
      FIND_STALL, ROB_STALL: Self.RobStall();
      WAIT_STATE: Wait(100, 200);
      WALK_SPOT:  Self.RSW.WebWalk(SafeSpot, 3, 0.2);
      END_SCRIPT: Break;
    end;

    Self.DoAntiban();
  until Self.ShouldStop();
end;

var
  StallRobber: TStallRobber;

{$IFDEF SCRIPT_GUI}
type
  TStallRobberConfig = record(TScriptForm)
    StallSelector: TLabeledCombobox;
  end;

procedure TStallRobberConfig.StartScript(sender: TObject); override;
begin
  CurrentStall := ERSStall(Self.StallSelector.GetItemIndex());
  inherited;
end;

procedure TStallRobberConfig.Run(); override;
var
  tab: TTabSheet;
begin
  Self.Setup('Wasp Stall Robber');
  Self.Start.SetOnClick(@Self.StartScript);

  Self.AddTab('Script Settings');
  tab := Self.Tabs[High(Self.Tabs)];

  Self.CreateAccountManager(tab);

  with Self.StallSelector do
  begin
    Create(tab);
    SetCaption('Stall:');
    SetLeft(TControl.AdjustToDPI(20));
    SetTop(TControl.AdjustToDPI(200));
    SetWidth(TControl.AdjustToDPI(300));
    SetStyle(csDropDownList);
    AddItemArray(['Tea stall (East Varrock)',
                  'Silk stall (Ardougne market, safe spot knights!)',
                  'Fruit stall (Hosidius east of the market)']);
    SetItemIndex(Ord(CurrentStall));
  end;

  Self.CreateVersionPanel(tab);
  Self.CreateAntibanManager();
  Self.CreateWaspLibSettings();
  Self.CreateAPISettings();

  inherited;
end;

var
  StallRobberConfig: TStallRobberConfig;
{$ENDIF}

begin
  {$IFDEF SCRIPT_GUI}
  StallRobberConfig.Run();
  {$ENDIF}
  StallRobber.Run(WLSettings.MaxActions, WLSettings.MaxTime);
end.
