{$IFDEF WINDOWS}{$DEFINE SCRIPT_GUI}{$ENDIF}
{$I WaspLib/osr.simba}

begin
  Login.PlayerIndex := 0;
end;

type
  ERSStall = (
    TEA_STALL,
    SILK_STALL,
    FRUIT_STALL
  );
var
  CurrentStall: ERSStall := ERSStall.FRUIT_STALL;

type
  EStallRobberState = (
    FIND_STALL,
    ROB_STALL,
    DROP_LOOT,
    WALK_SPOT,
    WAIT_STATE,
    END_SCRIPT
  );

  TStallRobber = record(TBaseWalkerScript)
    State: EStallRobberState;

    Stall: TRSObject;
    SafeSpot: TPoint;
    DropList: TRSItemArray;
    StallCooldown: TCountDown;
  end;

procedure TAntiban.Setup; override;
begin
  inherited;

  Antiban.Skills := [ERSSkill.THIEVING, ERSSkill.TOTAL];
  Antiban.MinZoom := 5;
  Antiban.MaxZoom := 85;
end;

procedure TStallRobber.SetupStall;
begin
  case CurrentStall of
    ERSStall.TEA_STALL:
      begin
        RSW.Setup('x7536y2363');
        Stall := RSObjects.TeaStall;
        StallCooldown.Init(7000);
        SafeSpot := [8465, 2808];
        DropList := ['Cup of tea'];
      end;

    ERSStall.SILK_STALL:
      begin
        RSW.Setup('x5723y3038');
        Stall := RSObjects.SilkStall;
        StallCooldown.Init(5000);
        SafeSpot := [6042, 3182];
        DropList := ['Silk'];
      end;

    ERSStall.FRUIT_STALL:
      begin
        RSW.Setup('x2468y1912');
        Stall := RSObjects.FruitStall;
        StallCooldown.Init(2000);
        DropList := [
          'Cooking apple', 'Banana', 'Jangerberries', 'Lemon', 'Redberries',
          'Pineapple', 'Lime', 'Strawberry', 'Strange fruit',
          'Golovanova fruit top', 'Papaya fruit', 'Silk'
        ];
      end;
  end;

  StallCooldown.Timeout := GetTickCount;
end;

procedure TStallRobber.Init(MaxActions: Int32; MaxTime: Int64); override;
begin
  Name := 'AIO StallRobber';

  inherited;

  Self.SetupStall;

  if not RSClient.IsLoggedIn then
    Login.LoginPlayer;

  if ScriptDebugEnabled then
    DebugObjectArray += @Stall;
end;


function TStallRobber.HasLoot: Boolean;
var
  Slots: TIntegerArray;
begin
  Result := Inventory.FindItems(DropList, Slots);
end;

function TStallRobber.RobStall: Boolean;
begin
  if Stall.WalkClick and (Result := XPBar.WaitXP(2000)) then
  begin
    StallCooldown.Restart(Random(-200, 200));
    WL.Activity.Restart;
  end;
end;

function TStallRobber.DropItems: Boolean;
var
  Slots: TIntegerArray;
begin
  Inventory.FindItems(DropList, Slots);
  Result := Inventory.ShiftDrop(DropList, DROP_PATTERN_SNAKE);

  if Result then
    TotalActions += Length(Slots);
end;


function TStallRobber.GetState: EStallRobberState;
begin
  if WL.Activity.IsFinished then
    Exit(END_SCRIPT);
  if Inventory.IsFull and Self.HasLoot then
    Exit(DROP_LOOT);
  if MainScreen.IsUpText('Steal-from') then
    Exit(ROB_STALL);
  if not StallCooldown.IsFinished then
    Exit(WAIT_STATE);
  if (SafeSpot <> []) and not RSW.AtTile(SafeSpot, 5) then
    Exit(WALK_SPOT);
  if RSW.AtTile(Stall.TileArray) then
    Exit(FIND_STALL);
end;

procedure TStallRobber.Run(MaxActions: Int32; MaxTime: Int64);
begin
  ClearDebug;
  Self.Init(MaxActions, MaxTime);

  while not Self.ShouldStop do
  begin
    State := Self.GetState;
    Action := ToStr(State);
    Self.ProcessWhileWaiting;

    case State of
      DROP_LOOT: Self.DropItems;
      FIND_STALL, ROB_STALL: Self.RobStall;
      WAIT_STATE: Wait(100, 200);
      WALK_SPOT: RSW.WebWalk(SafeSpot, 3, 0.2);
      END_SCRIPT: Break;
    end;

    Self.DoAntiban;
  end;
end;

var
  StallRobber: TStallRobber;

type
  TStallRobberConfig = record(TScriptConfig)
    StallSelector: TLabeledCombobox;
  end;

procedure TStallRobberConfig.StartScript(Sender: TObject);
begin
  Self.Init(Sender);

  CurrentStall := ERSStall(StallSelector.Combobox.getItemIndex);
end;

procedure TStallRobberConfig.Setup; override;
begin
  inherited;

  with StallSelector do
  begin
    Init(ScriptSettingsPanel);
    SetCaption('Stall:');
    SetLeft(ScriptSettingsLabel.getLeft + 5);
    SetTop(ScriptSettingsLabel.getTop + ScriptSettingsLabel.getHeight + 5);
    SetWidth(200);
    Combobox.setStyle(csDropDownList);
    Combobox.getItems.Add('Tea stall');
    Combobox.getItems.Add('Silk stall');
    Combobox.getItems.Add('Fruit stall');
    Combobox.setItemIndex(Ord(CurrentStall));
  end;

  StartButton.setOnClick(@Self.StartScript);
end;

procedure TStallRobberConfig.Run; override;
begin
  Self.Setup;

  inherited;
end;

var
  StallRobberConfig: TStallRobberConfig;

begin
  {$IFDEF SCRIPT_GUI}
  Sync(@StallRobberConfig.Run);
  {$ENDIF}
  StallRobber.Run(MaxActions, MaxTime);
end.
